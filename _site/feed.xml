

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Youn's Tech Blog</title>
  <subtitle>Frontend developer, JavaScript, TypeScropt, Flutter</subtitle>
  <updated>2024-03-07T12:23:52+09:00</updated>
  <author>
    <name>nayounho</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 nayounho </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>[Flutter] iOS, Code Factory Ch11 동영상플레이어</title>
    <link href="http://localhost:4000/posts/code-factory-ch11/" rel="alternate" type="text/html" title="[Flutter] iOS, Code Factory Ch11 동영상플레이어" />
    <published>2024-03-04T18:00:00+09:00</published>
  
    <updated>2024-03-04T18:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/code-factory-ch11/</id>
    <content src="http://localhost:4000/posts/code-factory-ch11/" />
    <author>
      <name>nayounho</name>
    </author>

  
    
    <category term="Development" />
    
    <category term="Flutter" />
    
  

  
    <summary>
      





      코드팩도리 CH11 동영상플레이어

프로젝트 목적


  동영상 플레이어 앱 구현
  핸드폰에 저장해둔 동영상을 선택, 실행, 컨트롤하는 기능 구현


사전 준비


  
    pubspec.yaml 파일에 라이브러리 추가

    // pubspec.yaml
dependencies:
	flutter:
	sdk: flutter
	image_picker: ^1.0.7
	video_player: ^2.8.2
    

    
      첫 번째 방법으로 pubspec.yaml 파일의 dependencies에 사용할 라이브러리를 위와 같이 추가하고 상단 우측에 Get Packages아이콘을 누르게 되면 해당 라이브러리가 받아진다.
      두 번째 방법은 터미널을 켜고 flutter pub add [라...
    </summary>
  

  </entry>

  
  <entry>
    <title>[Flutter] vsCode, Flutter 기본 세팅</title>
    <link href="http://localhost:4000/posts/flutter-default-setting/" rel="alternate" type="text/html" title="[Flutter] vsCode, Flutter 기본 세팅" />
    <published>2024-02-29T20:00:00+09:00</published>
  
    <updated>2024-02-29T20:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/flutter-default-setting/</id>
    <content src="http://localhost:4000/posts/flutter-default-setting/" />
    <author>
      <name>nayounho</name>
    </author>

  
    
    <category term="Development" />
    
    <category term="Flutter" />
    
  

  
    <summary>
      





      [vscode]Flutter 프로젝트 세팅

flutter create [프로젝트명]


  터미널에서 flutter create [프로젝트명]명령어로 프로젝트 만들기


Extension 설치


  Dart extension
  Flutter extension


dart devtool, 시뮬레이터 실행




  이미지 하단의 빨간 박스의 Dart devtool과 디바이스 선택 버튼이 있는지 확인





  디바이스 선택 버튼 클릭 시 상단의 빨간 박스가 나타나고 개발을 진행 할 디바이스 선택
  Dart devtool이 안보인다면 {} Dart 버튼을 호버하면 표시줄에 추가 할 항목이 나타나고 우측 pin 모양을 눌러 선택해주면 된다.


source.fixAll 활성화


  vscode에서...
    </summary>
  

  </entry>

  
  <entry>
    <title>[Github 블로그] Github 블로그 Page에 이미지 삽입</title>
    <link href="http://localhost:4000/posts/git-blog-added-img/" rel="alternate" type="text/html" title="[Github 블로그] Github 블로그 Page에 이미지 삽입" />
    <published>2024-02-27T17:00:00+09:00</published>
  
    <updated>2024-02-27T17:48:22+09:00</updated>
  
    <id>http://localhost:4000/posts/git-blog-added-img/</id>
    <content src="http://localhost:4000/posts/git-blog-added-img/" />
    <author>
      <name>nayounho</name>
    </author>

  
    
    <category term="Development" />
    
    <category term="blog" />
    
  

  
    <summary>
      





      Github 블로그 Page에 이미지 삽입

이미지 준비


  사용할 이미지를 자신의 github blog 프로젝트의 폴더 중 assets 폴더 안으로 이동한다
  
    나같은 경우 post파일 이름과 같은 이름으로 폴더를 만들어 관리 중

    assets
  L img
	 L 2024-02-01-test
			 L a.png
			 L b.png

	 L 2024-02-03-test2
			 L c.png
			 L d.png
    
  


이미지 경로 확인


  
    기본 마크업
![img name](.././assets/img/2024-02-01-test/a.png)

    
      기본 마크업으로 이미지를 삽입하는 경우 github에 올렸을 때 경로를 찾지 못하는 오류 발...
    </summary>
  

  </entry>

  
  <entry>
    <title>[Flutter] MacOs, Flutter 개발 환경 세팅</title>
    <link href="http://localhost:4000/posts/flutter-dev-setting/" rel="alternate" type="text/html" title="[Flutter] MacOs, Flutter 개발 환경 세팅" />
    <published>2024-02-27T12:00:00+09:00</published>
  
    <updated>2024-02-27T12:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/flutter-dev-setting/</id>
    <content src="http://localhost:4000/posts/flutter-dev-setting/" />
    <author>
      <name>nayounho</name>
    </author>

  
    
    <category term="Development" />
    
    <category term="Flutter" />
    
  

  
    <summary>
      





      macOS, Flutter 개발 환경 세팅

Flutter SDK 다운로드 및 압축 풀기


  flutter 공홈 -&amp;gt; get started 버튼 -&amp;gt; macOS 선택 -&amp;gt; iOS 선택 -&amp;gt; 스크롤을 좀 내리다 보면 download and install 탭이 있는데 intel칩이면 intel prosessor를 클릭하여 다운받고(.zip 파일) m1이상이면 apple silicon을 클릭하여 받으면 된다
  
    다운된 파일을 압축해제 한 후 환경설정을 해줘야 한다

    
      터미널을 켜고
      
        echo &amp;amp;SHELL 명령어를 입력하여 내가 어떤 셸을 사용하는지 확인 -&amp;gt; /bin/bash 또는 /bin/zsh

        
  ...
    </summary>
  

  </entry>

  
  <entry>
    <title>[React-query] React-query 사용예제</title>
    <link href="http://localhost:4000/posts/React-Query-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C/" rel="alternate" type="text/html" title="[React-query] React-query 사용예제" />
    <published>2024-02-22T20:00:00+09:00</published>
  
    <updated>2024-02-22T20:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/React-Query-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C/</id>
    <content src="http://localhost:4000/posts/React-Query-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C/" />
    <author>
      <name>nayounho</name>
    </author>

  
    
    <category term="Development" />
    
    <category term="Library" />
    
  

  
    <summary>
      





      React-query 사용 예제

기존 코드


const Coins = () =&amp;gt; {

const [coins, setCoins] = useState&amp;lt;ICoin[]&amp;gt;([]); // 통신으로 받아온 coins data 상태관리

const [loading, setLoading] = useState(true); // 통신 과정 상태관리



useEffect(() =&amp;gt; { // 화면 mount 시 해당 함수 실행

(async () =&amp;gt; {

const res = await fetch("httpspi.coinpaprika.com/v1/coins"); // data 요청

const data = await res.json();



setCoins(data.slice(0, 100...
    </summary>
  

  </entry>

</feed>


